/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package gpx.splitter

import org.w3c.dom.Node
import org.w3c.dom.NodeList
import java.io.File
import java.io.FileWriter
import java.nio.file.Files
import java.nio.file.Path
import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.transform.TransformerFactory
import javax.xml.transform.dom.DOMSource
import javax.xml.transform.stream.StreamResult
import javax.xml.xpath.XPathConstants
import javax.xml.xpath.XPathFactory

class GpxSplitter(val outputFolder : File){
    fun split(input : File){
        val dbf = DocumentBuilderFactory.newInstance();
        val doc = dbf.newDocumentBuilder().parse(input);
        val xpath = XPathFactory.newInstance().newXPath();

        val nodes =   xpath.evaluate("//gpx/trk", doc, XPathConstants.NODESET);
        if (nodes !is NodeList) return;

        (0..nodes.length-1).forEach{i->outputSingleTrack(nodes.item(i), i)}
    }

    fun outputSingleTrack(node: Node, index : Int) {
        val trkName = node.childNodes.item(1)?.textContent ?: "track_"+index

        val doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();

        val gpx = doc.createElement("gpx").apply {
            setAttribute("creator", "gpx-splitter");
            setAttribute("version", "1.1");
            setAttribute("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
            setAttribute("xsi:schemaLocation", "http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd");
        }

        val outputFile = File(outputFolder, trkName + ".gpx");
        gpx.appendChild(doc.importNode(node, true));

        val transformer = TransformerFactory.newInstance().newTransformer();
        transformer.transform(DOMSource(gpx),  StreamResult(FileWriter(outputFile)));
    }
}

fun main(args: Array<String>) {
    if(args.size < 2) {
        println("Required args: <inputFile> <outputFolder>");
        return;
    }
    if (!Files.exists(Path.of(args[0]))){
        println( args[0] + " does not exist.");
        return;
    }
    if (!Files.isDirectory(Path.of(args[1]))){
        println("Directory " + args[1]+ " does not exist.");
        return;
    }

    GpxSplitter(File(args[1])).split(File(args[0]))
}


